CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
# Каталог для собранных библиотек.
#set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib")
#link_directories(${CMAKE_ARCHIVE_OUTPUT_DIRECTORY} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})

SET(CMAKE_PROJECT_NAME tclpkcs11)
PROJECT(${CMAKE_PROJECT_NAME} C)

# На основе имени проекта составляем имена переменных.
STRING(REPLACE "." "" PROJECT_NAME_HIGH ${CMAKE_PROJECT_NAME})
STRING(REPLACE "-" "_" PROJECT_NAME_HIGH ${PROJECT_NAME_HIGH})
STRING(REPLACE "+" "_" PROJECT_NAME_HIGH ${PROJECT_NAME_HIGH})
STRING(TOUPPER ${PROJECT_NAME_HIGH} PROJECT_NAME_HIGH)
STRING(TOLOWER ${PROJECT_NAME_HIGH} PROJECT_NAME_LOW)

IF(CMAKE_HOST_WIN32)
    ADD_DEFINITIONS(-D_CONSOLE -DNDEBUG -DWIN32 -DWIN32_LEAN_AND_MEAN -D_WIN32_WINNT=0x0500 -D_CRT_SECURE_NO_WARNINGS -MT)
    ADD_DEFINITIONS(-DPACKAGE_NAME=\"tclpkcs11\" -DPACKAGE_TARNAME=\"tclpkcs11\" -DPACKAGE_VERSION=\"1.0.1\" -DPACKAGE_STRING=\"tclpkcs11\ 1.0.1\" -DPACKAGE_BUGREPORT=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1  -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1  -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DMODULE_SCOPE=static -DUSE_TCL_STUBS=1 -DUSE_INTERP_RESULT )
ELSE(CMAKE_HOST_WIN32)
#if (UNIX)
    add_definitions("-fPIC -Wall ")
    add_definitions(-DPACKAGE_NAME=\"tclpkcs11\" -DPACKAGE_TARNAME=\"tclpkcs11\" -DPACKAGE_VERSION=\"1.0.1\" -DPACKAGE_STRING=\"tclpkcs11\ 1.0.1\" -DPACKAGE_BUGREPORT=\"\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DLOPEN=1 -DHAVE_UNISTD_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_DLFCN_H=1 -DMODULE_SCOPE=static -DUSE_TCL_STUBS=1 -DUSE_INTERP_RESULT )
#endif (UNIX)
ENDIF(CMAKE_HOST_WIN32)

IF (CMAKE_SIZEOF_VOID_P EQUAL 8)
    IF (CMAKE_SYSTEM_NAME STREQUAL "Linux" AND CMAKE_COMPILER_IS_GNUCC)
	    add_definitions("-m64")
    ENDIF (CMAKE_SYSTEM_NAME STREQUAL "Linux" AND CMAKE_COMPILER_IS_GNUCC)
ENDIF (CMAKE_SIZEOF_VOID_P EQUAL 8)

IF(NOT CMAKE_BUILD_TYPE)
#	SET(CMAKE_BUILD_TYPE "Release")
ENDIF(NOT CMAKE_BUILD_TYPE)

#CONFIGURE_FILE(
#	${CMAKE_CURRENT_SOURCE_DIR}/include/cwapi.h
#	${CMAKE_CURRENT_SOURCE_DIR}/src/lir/cwapi.h
#	${CMAKE_HEADER_OUTPUT_DIRECTORY}
#	COPYONLY
#)

INCLUDE_DIRECTORIES(${CMAKE_HEADER_OUTPUT_DIRECTORY})

INCLUDE(CTest)
ADD_SUBDIRECTORY(src)
